import java.util.LinkedList;
import java.util.List;
import java.util.random.RandomGenerator;




public class Operation{
    public static void main(String[] args){
        // RandomGenerator g = RandomGenerator.of("fuck you"); // Is worng.
        // System.out.println(g.nextInt());

        RandomGenerator g1 = RandomGenerator.of("L32X64MixRandom");
        RandomGenerator g2 = RandomGenerator.of("L64X128MixRandom");
        RandomGenerator g3 = RandomGenerator.of("L128X128MixRandom");
        RandomGenerator g4 = RandomGenerator.of("Random");

        // List<int> a1 = new LinkedList<>();   // 泛型只能使用引用类型，不能使用基本类型
        List<Integer> a2 = new LinkedList<>();
        List<Integer> a1 = new LinkedList<>();
        List<Integer> a3 = new LinkedList<>();
        List<Integer> a4 = new LinkedList<>();
        
        for(int i=0;i<100;i++){
            a1.add(g1.nextInt(11));   // Why warning me about the type safety?
            a2.add(g2.nextInt(1,11));
            a3.add(g3.nextInt());
            a4.add(g4.nextInt());

        }

        System.out.println(a1);
        System.out.println(a2);
        System.out.println(g1);
        System.out.println(g2);
        System.out.println(g3);

        // System.out.println(a1);
        // System.out.println(a2);
        // System.out.println(a3);
        RandomGenerator gg =  RandomGenerator.getDefault();
        System.out.println("The number generated by gg is " +gg.nextDouble());

        // g4.ints(8).forEach(System.out.println); // why not a field?
        g4.ints(8).forEach(System.out::println); // why not a field?
        System.out.println(g1.isDeprecated());
        System.out.println(g2.isDeprecated());
        System.out.println(g3.isDeprecated());
        System.out.println(g4.isDeprecated());
    }
}